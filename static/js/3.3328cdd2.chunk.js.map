{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","dialogs__wrap","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","el","messageElements","messages","dispatch","newPostText","dialogs__items","dialogs__messages","values","addPostToMess","newMessageBody","compose","connect","addPostToMessActionCreator"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,0B,gJCU/HC,MARf,SAAoBC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,qBAAKC,UAAWC,IAAQC,OAAS,GAAKD,IAAQE,OAA9C,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,U,kBCEjBC,MAPf,SAAiBT,GACf,OACE,qBAAKG,UAAU,GAAf,SACE,qBAAKA,UAAWC,IAAQM,QAAxB,SAAkCV,EAAMU,a,kCCiCxCC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAEpCC,KAAM,wBAFoBD,EAdL,SAACd,GACtB,OACE,uBAAMG,UAAWC,IAAQY,cAAeC,SAAUjB,EAAMkB,aAAxD,UACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBH,KAAM,iBACNgB,YAAa,gBAEf,yDAUSC,EAjDC,SAACzB,GACf,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYvB,KAAMuB,EAAGvB,KAAMN,GAAI6B,EAAG7B,IAAS6B,EAAG7B,OAE5C8B,EAAkBN,EAAMO,SAASH,KAAI,SAACC,GAAD,OACvC,cAAC,EAAD,CAASrB,QAASqB,EAAGrB,QAASwB,SAAUlC,EAAMkC,UAAeH,EAAG7B,OAGhDwB,EAAMS,YASxB,OACE,sBAAKhC,UAAWC,IAAQyB,QAAxB,UACE,yCACA,qBAAK1B,UAAWC,IAAQgC,eAAxB,SAAyCR,IACzC,qBAAKzB,UAAWC,IAAQiC,kBAAxB,SAA4CL,IAC5C,cAACnB,EAAD,CAAqBI,SAXL,SAACqB,GACnBtC,EAAMuC,cAAcD,EAAOE,uB,gCCDhBC,sBACbC,aAfoB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACO,GACxB,MAAO,CACLK,cAAe,SAACC,GACdN,EAASS,YAA2BH,SAK3BC,CAMbhB","file":"static/js/3.3328cdd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__D0JDL\",\"dialogs__wrap\":\"Dialogs_dialogs__wrap__2y4Uo\",\"dialog\":\"Dialogs_dialog__1kUYf\",\"active\":\"Dialogs_active__1TSPN\"};","import classes from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={classes.dialog + \"\" + classes.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\nexport default DialogItem;\r\n","import classes from \"./Message.module.css\";\r\n\r\nfunction Message(props) {\r\n  return (\r\n    <div className=\"\">\r\n      <div className={classes.message}>{props.message}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default Message;\r\n","import React, { useImperativeHandle } from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../components/common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((el) => (\r\n    <DialogItem name={el.name} id={el.id} key={el.id} />\r\n  ));\r\n  let messageElements = state.messages.map((el) => (\r\n    <Message message={el.message} dispatch={props.dispatch} key={el.id} />\r\n  ));\r\n\r\n  let newPostText = state.newPostText;\r\n  let textareaCont = React.createRef();\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addPostToMess(values.newMessageBody);\r\n  };\r\n  // if (!props.isAuth) {\r\n  //   return <Redirect to={\"/login\"} />;\r\n  // }\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <h2>Dialogs</h2>\r\n      <div className={classes.dialogs__items}>{dialogsElements}</div>\r\n      <div className={classes.dialogs__messages}>{messageElements}</div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form className={classes.dialogs__wrap} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        validate={[required, maxLength50]}\r\n        name={\"newMessageBody\"}\r\n        placeholder={\"newPostText\"}\r\n      />\r\n      <button>alert message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  // a unique name for the form\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { addPostToMessActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../components/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n// созд две фии для настройки коннекта чтобы презкомп Dialogs законнектить к стору\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPostToMess: (newMessageBody) => {\r\n      dispatch(addPostToMessActionCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ) /*убирая этот редирект можем снимать защиту*/\r\n  /*withAuthRedirect*/\r\n)(Dialogs);\r\n"],"sourceRoot":""}