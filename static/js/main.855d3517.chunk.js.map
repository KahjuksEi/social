{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Navigation/Navigation.module.css","components/Users/Users.module.css","reportWebVitals.js","api/api.js","redux/profile-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/logo.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navigation/Navigation.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","assets/images/preloader.gif","components/common/Preloader/Preloader.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","assets/images/ava.png","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Friend/Friend.jsx","components/Login/Login.jsx","App.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Header/Header.module.css","components/common/FormsControls/FormControls.module.css","redux/dialogs-reducer.js","components/common/Paginator/Paginator.module.css","components/Friend/Friend.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","follow","userId","post","id","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","message","like","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","stateCopy","push","filter","p","postId","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","followed","count","login","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Header","props","src","logo","className","alt","href","classes","link","onClick","logout","to","HeaderContainer","this","React","Component","connect","Navigation","nav","activeClassName","active","Post","img","MyPosts","memo","postsElements","el","AddNewPostFormRedux","onSubmit","values","addPost","maxLength10","maxLengthCreator","reduxForm","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","MyPostsContainer","addPostActionCreator","Preloader","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","ProfileInfo","photos","small","fullName","Profile","content__wrap","ProfileContainer","match","params","getUserProfile","compose","autorizedUserId","withRouter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","selectedPage","noSelectedPage","Users","ava","disabled","some","getUsersURSuperSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","bind","page","items","totalCount","Friend","LoginReduxForm","Input","error","stopSubmit","_error","formData","DialogsContainer","lazy","App","initializeApp","path","render","Suspense","fallback","promise","Promise","all","ReactDOM","document","getElementById","maxLength","length","input","meta","hasError","touched","formControl","dialogs","messages","addPostToMessActionCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.855d3517.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__1HkiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__3jvoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__wrap\":\"Profile_content__wrap__343ot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__7gsBu\",\"link\":\"Navigation_link__3xqlq\",\"active\":\"Navigation_active__1wQi3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Users_selected__Qd6ve\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\n/*делаем инстанс чтоб не дублироваться*/\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  /*baseURL: \"https://social-network.samuraijs.com/api/1.0/\",*/\r\n  headers: {\r\n    \"API-KEY\": \"9d339b31-96cf-4a17-b83a-20f7aa16f051\",\r\n  },\r\n});\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(\r\n        /*baseURL + */ `https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`\r\n      )\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(\r\n      `https://social-network.samuraijs.com/api/1.0/follow/${userId.id}`\r\n    );\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(\r\n      `https://social-network.samuraijs.com/api/1.0/follow/${userId.id}`\r\n    );\r\n  },\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolete method\");\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(\r\n      `https://social-network.samuraijs.com/api/1.0/profile/` + userId\r\n    );\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(\r\n      `https://social-network.samuraijs.com/api/1.0/profile/status/` + userId\r\n    );\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(\r\n      `https://social-network.samuraijs.com/api/1.0/profile/status/`,\r\n      { status: status }\r\n    );\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`https://social-network.samuraijs.com/api/1.0/auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(\r\n      `https://social-network.samuraijs.com/api/1.0/auth/login`,\r\n      { email, password, rememberMe }\r\n    );\r\n  },\r\n  logout() {\r\n    return instance.delete(\r\n      `https://social-network.samuraijs.com/api/1.0/auth/login`\r\n    );\r\n  },\r\n};\r\n","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\n//когда в редюсер еще не пришел никакой стейт то юзаем первичный стейт\r\n//в редюсере как аргумент по умолчанию\r\nlet initialState = {\r\n  posts: [\r\n    { message: \"hello everybody!\", id: 1, like: \"33\" },\r\n    { message: \"hi!\", id: 2, like: \"10\" },\r\n    { message: \"wazzup!!\", id: 3, like: \"77\" },\r\n  ],\r\n  // newPostText: \"it-kamasutra\",\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD-POST\": {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        like: \"0\",\r\n      };\r\n      /*по правилам созд копию стейта в котором меняем данные*/\r\n      /*и копии объектов кот меняем, чтоб была иммутабельность*/\r\n      let stateCopy = { ...state };\r\n      stateCopy.posts = [...state.posts];\r\n      stateCopy.posts.push(newPost);\r\n      stateCopy.newPostText = \"\";\r\n      return stateCopy;\r\n    }\r\n    // case \"UPDATE-NEW-POST-TEXT\": {\r\n    //   let stateCopy = { ...state };\r\n    //   stateCopy.posts = [...state.posts];\r\n    //   stateCopy.newPostText = action.newText;\r\n    //   return stateCopy;\r\n    // }\r\n    case \"SET_USER_PROFILE\": {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n    case \"SET_STATUS\": {\r\n      return { ...state, status: action.status };\r\n    }\r\n    /*для теста*/\r\n    case \"DELETE_POST\": {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((p) => p.id != action.postId),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n/*AC фия возвр объект экшн в кот инкапс данные для редюсера чтобы он применил изменения стейта*/\r\nexport const addPostActionCreator = (newPostText) => {\r\n  return { type: \"ADD-POST\", newPostText };\r\n};\r\n// export const updateNewPostTextActionCreator = (text) => {\r\n//   return { type: \"UPDATE-NEW-POST-TEXT\", newText: text };\r\n// };\r\nexport const setUserProfile = (profile) => {\r\n  return { type: \"SET_USER_PROFILE\", profile };\r\n};\r\nexport const setStatus = (status) => {\r\n  return { type: \"SET_STATUS\", status };\r\n};\r\nexport const deletePost = (postId) => {\r\n  return { type: \"DELETE_POST\", postId }; /*для теста*/\r\n};\r\n/*THUNKS:*/\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await usersAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import { usersAPI } from \"../api/api\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  /*когда подписка кладем ИД, когда отписка забираем*/\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FOLLOW\":\r\n      return {\r\n        /*возвр копию всего стейта, копируем юзерс и конкретного юзера кот надо зафолловить*/\r\n        ...state,\r\n        /*users:[...state.users] map аналогичен этому способу*/\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case \"UNFOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case \"SET_USERS\":\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case \"SET_CURRENT_PAGE\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case \"SET_TOTAL_USERS_COUNT\":\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      };\r\n    case \"TOGGLE_IS_FETCHING\":\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case \"TOGGLE_IS_FOLLOWING_PROGRESS\":\r\n      return {\r\n        ...state,\r\n        /* фильтруем только ИД неравную пришедшей с экшна */\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const followSuccess = (userId) => {\r\n  return { type: \"FOLLOW\", userId };\r\n};\r\nexport const unfollowSuccess = (userId) => {\r\n  return { type: \"UNFOLLOW\", userId };\r\n};\r\nexport const setUsers = (users) => {\r\n  return { type: \"SET_USERS\", users };\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n  return { type: \"SET_CURRENT_PAGE\", currentPage };\r\n};\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n  return { type: \"SET_TOTAL_USERS_COUNT\", count: totalUsersCount };\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n  return { type: \"TOGGLE_IS_FETCHING\", isFetching };\r\n};\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n  return { type: \"TOGGLE_IS_FOLLOWING_PROGRESS\", isFetching, userId };\r\n};\r\n\r\n/*санка*/\r\nexport const getUsers = (page, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page)); /*пагинация*/\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n  };\r\n};\r\n\r\n/*понятный незарефакторенный код функций*/\r\n// export const follow = (userId) => {\r\n//   return async (dispatch) => {\r\n//     dispatch(toggleFollowingProgress(true, userId));\r\n//     let response = await usersAPI.follow(userId);\r\n//     if (response.data.resultCode === 0) {\r\n//       dispatch(followSuccess(userId));\r\n//     }\r\n//     dispatch(toggleFollowingProgress(false, userId));\r\n//   };\r\n// };\r\n\r\n// export const unfollow = (userId) => {\r\n//   return async (dispatch) => {\r\n//     dispatch(toggleFollowingProgress(true, userId));\r\n//     let response = await usersAPI.unfollow(userId);\r\n//     if (response.data.resultCode === 0) {\r\n//       dispatch(unfollowSuccess(userId));\r\n//     }\r\n//     dispatch(toggleFollowingProgress(false, userId));\r\n//   };\r\n// };\r\n\r\nexport default usersReducer;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n  /*продвинутый рефакторинг*/\r\n\r\n  switch (action.type) {\r\n    case \"SET-USER-DATA\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        /*isAuth: true,*/\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n  return { type: \"SET-USER-DATA\", payload: { userId, email, login, isAuth } };\r\n};\r\n/*thunk*/\r\n/*рфктр переписать на асинк\\авейт санки как эта*/\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    /*стопаем сабмит какой формы и какие свва, не работает как надо*/\r\n    dispatch(stopSubmit(\"login\", { _error: \"common error\" }));\r\n  }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n  /*продвинутый рефакторинг*/\r\n\r\n  switch (action.type) {\r\n    case \"INITIALIZED_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const initializedSuccess = () => {\r\n  return { type: \"INITIALIZED_SUCCESS\" };\r\n};\r\n/*thunk*/\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  /*когда все промисы из массива зарезолвятся*/\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n/*import { thunk as thunkMiddleware } from \"redux-thunk\";*/\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\n//комбинируем типа за каждое наше свво отвечает опред редюсер и отдаем их стору\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n/*applyMiddleware слой для санок*/\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from \"./logo.svg\";\r\nimport classes from \"./Header.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <h2>MEGA REACT SAMURAI PROJECT</h2>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#\" className={classes.link}>\r\n              Profile\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\" className={classes.link}>\r\n              Messages\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\" className={classes.link}>\r\n              Friends\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\" className={classes.link}>\r\n              Groups\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"\">\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Log out</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import classes from \"./Navigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to=\"/profile\"\r\n              className={classes.link}\r\n              activeClassName={classes.active}\r\n            >\r\n              Profile\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/users\"\r\n              className={classes.link}\r\n              activeClassName={classes.active}\r\n            >\r\n              Users\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/dialogs\"\r\n              className={classes.link}\r\n              activeClassName={classes.active}\r\n            >\r\n              Messages\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/news\" className={classes.link}>\r\n              News\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/music\" className={classes.link}>\r\n              Music\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/settings\" className={classes.link}>\r\n              Settings\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import { addPost } from \"../../../../redux/store\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div>\r\n      <img\r\n        className={classes.img}\r\n        src=\"https://img2.freepng.ru/20180612/ih/kisspng-computer-icons-avatar-user-profile-clip-art-5b1f69f0e68650.4078880515287853929442.jpg\"\r\n        alt=\"user\"\r\n      />\r\n      <div className=\"\">Post 1</div>\r\n      <p>{props.message}</p>\r\n      <span>like {props.like}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React, { useImperativeHandle } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  /*для однократных отрисовок, но чисто для классов, либо можно класс extends PureComponent \r\n  и проверка по дефолту будет, а для функкомп юзаем memo*/\r\n  // shouldComponent(nextProps, nextState){\r\n  //   return nextProps != nextProps || nextState !=nextState\r\n  // }\r\n\r\n  let postsElements = props.posts.map((el) => (\r\n    <Post message={el.message} like={el.like} />\r\n  ));\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>My posts ProfilePage</h1>\r\n      <h2>new post</h2>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      {postsElements}\r\n      <Post />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nfunction AddNewPostForm(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        /* рисуем компонент без кавычек*/\r\n        placeholder={\"Post message\"}\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n  // a unique name for the form\r\n  form: \"ProfileAddNewPostForm\",\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {\r\n  addPostActionCreator,\r\n  /*updateNewPostTextActionCreator,*/\r\n} from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n    // updateNewPostText: (text) => {\r\n    //   let action = updateNewPostTextActionCreator(text);\r\n    //   dispatch(action);\r\n    // },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","export default __webpack_public_path__ + \"static/media/preloader.69d0ebc6.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nlet Preloader = (props) => {\r\n  return <img src={preloader} />;\r\n};\r\nexport default Preloader;\r\n","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = { editMode: false, status: this.props.status };\r\n  activateEditMode = () => {\r\n    this.setState({ editMode: true });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({ editMode: false });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({ status: this.props.status });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.state.status || \"#####\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode}\r\n              onChange={this.onStatusChange}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n        <div></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  /*let stateWithSetState = useState(false);*/ /*true создаст инпут*/\r\n  // let editMode = stateWithSetState[0];\r\n  // let setEditMode = stateWithSetState[1];\r\n  let [editMode, setEditMode] = useState(\r\n    false\r\n  ); /*деструктуризацией ибо useState возвр массив*/\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  /*принимает фию которую выполнит после отрисовки*/\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status /*запуск зависит от статуса*/]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status); /*отправка нового статуса*/\r\n  };\r\n\r\n  /*под кажд напечатанный символ*/\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onDoubleClick={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            type=\"text\"\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n      <div></div>\r\n    </>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.img}>\r\n        {/* <img src={props.profile.photos.large} alt=\"photo\" /> */}\r\n      </div>\r\n      <img src={props.profile.photos.small} alt=\"photo\" />\r\n      <p>{props.profile.fullName}</p>\r\n      {/* <ProfileStatus status={props.status} updateStatus={props.updateStatus} /> */}\r\n      <ProfileStatusWithHooks\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={classes.content__wrap}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../components/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = 14337;\r\n      // закоменчено чтоб profile видеть без логина\r\n      // userId = this.props.autorizedUserId;\r\n      // if (!userId) {\r\n      //   this.props.history.push(\"/login\");\r\n      // }\r\n    } /*дефолтный при отсутствии*/\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* прокидываем развернуто пропсы */}\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter\r\n  /*убирая этот редирект можем снимать защиту*/\r\n  /*withAuthRedirect*/\r\n)(ProfileContainer);\r\n","export default __webpack_public_path__ + \"static/media/ava.f942f9f3.png\";","import React, { useState } from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\n// import cn from \"classnames\";\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  /*со старта храним первую порцию страниц в юзСтейте*/\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={classes.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          Prev\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              // className={cn(\r\n              //   { [classes.selectedPage]: currentPage === p },\r\n              //   classes.pageNumber\r\n              // )}\r\n\r\n              className={`${\r\n                currentPage === p\r\n                  ? classes.selectedPage\r\n                  : classes.noSelectedPage\r\n              }`}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      )}\r\n      {/* {pages.map((p) => {\r\n        return (\r\n          <span\r\n            className={currentPage === p && classes.selected}\r\n            onClick={(e) => {\r\n              onPageChanged(p);\r\n            }}\r\n          >\r\n            {p}\r\n          </span>\r\n        );\r\n      })} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import ava from \"../../assets/images/ava.png\";\r\nimport classes from \"./Users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet Users = ({\r\n  currentPage,\r\n  onPageChanged,\r\n  totalUsersCount,\r\n  pageSize,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      {props.users.map((u) => (\r\n        <div key={u.id}>\r\n          <span>\r\n            <div>\r\n              <NavLink to={\"/profile/\" + u.id}>\r\n                <img\r\n                  src={u.photos.small != null ? u.photos.small : ava}\r\n                  alt=\"user\"\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {u.followed ? (\r\n                <button\r\n                  disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => {\r\n                    props.unfollow(u.id);\r\n                  }}\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  /*если хоть одна ИД равна ИД юзера*/\r\n                  disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => {\r\n                    props.follow(u.id);\r\n                  }}\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <div>\r\n              <div>{u.name}</div>\r\n              <div>{u.status}</div>\r\n            </div>\r\n            <div>\r\n              <div>{\"u.location.country\"}</div>\r\n              <div>{\"u.location.city\"}</div>\r\n            </div>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { createSelector } from \"reselect\";\r\n\r\n/*export const getUsersUR = (state) => {\r\n  return state.usersPage.users;\r\n};*/\r\n\r\n/*работа через реселект*/\r\nexport const getUsersURSelector = (state) => {\r\n  return state.usersPage.users;\r\n};\r\nexport const getUsersURSuperSelector = createSelector(\r\n  getUsersURSelector,\r\n  (users) => {\r\n    return users.filter((u) => true);\r\n  }\r\n);\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  toggleFollowingProgress,\r\n  getUsers,\r\n} from \"../../redux/users-reducer\";\r\nimport {\r\n  getUsersUR,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress,\r\n  getUsersURSuperSelector,\r\n} from \"../../redux/users-selectors\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     isFetching: state.usersPage.isFetching,\r\n//     followingInProgress: state.usersPage.followingInProgress,\r\n//   };\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    /*users: getUsersUR(state),*/\r\n    users: getUsersURSuperSelector(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers,\r\n  })\r\n)(UsersContainer);\r\n","import classes from \"./Friend.module.css\";\r\n\r\nfunction Friend(props) {\r\n  let friendElements = props.state.dialogs.map((el) => (\r\n    <div>\r\n      <p>{el.name}</p>\r\n      <img\r\n        className={classes.img}\r\n        src=\"https://img2.freepng.ru/20180612/ih/kisspng-computer-icons-avatar-user-profile-clip-art-5b1f69f0e68650.4078880515287853929442.jpg\"\r\n        alt=\"user\"\r\n      />\r\n    </div>\r\n  ));\r\n\r\n  return <div className={classes.friendItem}>{friendElements}</div>;\r\n}\r\n\r\nexport default Friend;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"../../components/common/FormsControls/FormsControls\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        placeholder={\"Email\"}\r\n        name={\"email\"}\r\n        component={Input}\r\n        validate={[required]}\r\n      />\r\n      <Field\r\n        placeholder={\"password\"}\r\n        type={\"password\"}\r\n        name={\"password\"}\r\n        component={Input}\r\n        validate={[required]}\r\n      />\r\n      <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"} />\r\n      Remember me\r\n      <br />\r\n      {props.error && (\r\n        <div className={\"formSummaryError\"}>Error: {props.error}</div>\r\n      )}\r\n      <button>Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  // a unique name for the form\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\n/*экспорт образовавшуюся с помощью хока коннект*/\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n/*lazyload example*/\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Friend from \"./components/Friend/Friend\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n\n    return (\n      <div className=\"App-wrapper\">\n        <HeaderContainer />\n        <Navigation />\n        {/* показываем что у урла могут быть параметры, \"?\" дает необяз-сть параметра */}\n        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n\n        <Route\n          path=\"/dialogs\"\n          render={() => {\n            return (\n              <React.Suspense fallback={<div>Loadingg..</div>}>\n                <DialogsContainer />\n              </React.Suspense>\n            );\n          }}\n        />\n        <Route path=\"/users\" render={() => <UsersContainer />} />\n\n        <Route path=\"/login\" render={() => <Login />} />\n        <p>Friends online:</p>\n        {/* <Friend state={props.state.dialogsPage} /> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\n/*export default App;*/\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n","import reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/redux-store\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const required = (value) => {\r\n  if (value) {\r\n    return undefined;\r\n  }\r\n  return \"field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `max length is ${maxLength} symbols`;\r\n  }\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\n// const FormControl = ({ input, meta, child, element, ...props }) => {\r\n\r\n//   const hasError = meta.touched && meta.error;\r\n//   return (\r\n//     <div\r\n//       className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}\r\n//     >\r\n//       <div>\r\n//         <element {...input} {...props} />\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   );\r\n// };\r\n// export const Textarea = (props) => {\r\n//   return <FormControl element={textarea} {...props}></FormControl>;\r\n// };\r\n// export const Input = (props) => {\r\n//   return <FormControl element={input} {...props}></FormControl>;\r\n// };\r\n\r\n/*Здесь вынимаем инпут и мета, остальное оставляем в пропсах рестом, деструктурируем*/\r\n// либо понятный говнокод вместо вышеуказанного\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  /* метаданные редаксформ для проверки тронутого и валидного инпута */\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div\r\n      className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}\r\n    >\r\n      <textarea {...input} {...props} />\r\n\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div\r\n      className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}\r\n    >\r\n      <input {...input} {...props} />\r\n\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__16F9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2fRQZ\",\"error\":\"FormControls_error__2wKu1\"};","let initialState = {\r\n  dialogs: [\r\n    { name: \"Ash\", id: 1 },\r\n    { name: \"Ken\", id: 2 },\r\n    { name: \"Tom\", id: 3 },\r\n    { name: \"Joy\", id: 4 },\r\n    { name: \"Amy\", id: 5 },\r\n    { name: \"Sid\", id: 6 },\r\n  ],\r\n  messages: [\r\n    { message: \"Hi\", id: 1 },\r\n    { message: \"Hello!\", id: 2 },\r\n    { message: \"How do you do?\", id: 3 },\r\n  ],\r\n};\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  /*продвинутый рефакторинг*/\r\n  switch (action.type) {\r\n    case \"ADD-POST-TO-MESS\":\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 10, message: body }],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addPostToMessActionCreator = (newMessageBody) => {\r\n  return { type: \"ADD-POST-TO-MESS\", newMessageBody };\r\n};\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Paginator_selected__1FeOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Friend_img__1Slu_\",\"friendItem\":\"Friend_friendItem__JBDmm\"};"],"sourceRoot":""}